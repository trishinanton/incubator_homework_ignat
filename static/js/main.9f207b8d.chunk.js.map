{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h12/HW12.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/common/c1-SuperInputText/AlternativeSuperInputText.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/AlternativeClock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/Junior++.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Message","props","className","c","message","message__wrapper","content","content__avatar","src","avatar","alt","content__body","content__name","name","content__message","content__messagetext","content__time","time","input","type","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","inputClass","s","value","onChange","onKeyPress","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","currentTarget","charCode","HW3","setUsers","newUser","v1","SuperInputText","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","defaultInput","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","AlternativeSuperInputText","console","log","trim","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","el","i","SuperRadio","o","arr","HW7","homeWorkReducer","action","payload","sort","b","age","initialPeople","HW8","people","setPeople","finalPeople","p","style","display","width","justifyContent","paddingLeft","paddingRight","AlternativeClock","date","setDate","intId","setIntId","show","setShow","stop","clearInterval","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","id","window","setInterval","Date","HW9","initState","isLoading","loadingAC","HW10","loading","useSelector","dispatch","useDispatch","setTimeout","useStyles","makeStyles","root","SuperRange","onChangeRange","classes","Typography","gutterBottom","Slider","event","newValue","valueLabelDisplay","aria-labelledby","SuperDoubleRange","HW11","value1","setValue1","value2","setValue2","Junior","HW12","theme","JuniorPlus","PATH","Routes","path","exact","render","to","Header","menu","menu__item","menu_btn","HW5","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9f207b8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__wrapper\":\"Message_message__wrapper__1pj4g\",\"content__avatar\":\"Message_content__avatar__3-UOq\",\"content__body\":\"Message_content__body__1elYY\",\"content__message\":\"Message_content__message__2VbJZ\",\"content__messagetext\":\"Message_content__messagetext__jbc6o\",\"content__time\":\"Message_content__time__QTb-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1mgL2\",\"errorInput\":\"SuperInputText_errorInput__11DWd\",\"error\":\"SuperInputText_error__eXWPI\",\"defaultInput\":\"SuperInputText_defaultInput__2SQkP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Header_menu__2rBNW\",\"menu_btn\":\"Header_menu_btn__2TVMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__h4GP_\",\"column\":\"HW4_column__QeY4h\",\"testSpanError\":\"HW4_testSpanError__2FF1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3PXSd\",\"red\":\"SuperButton_red__bEBY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__35UXr\",\"spanClassName\":\"SuperCheckbox_spanClassName__3DJen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__1ahWc\",\"dark-text\":\"HW12_dark-text__3rVYe\",\"red\":\"HW12_red__TNQft\",\"red-text\":\"HW12_red-text__2gsZr\",\"some\":\"HW12_some__2dQGm\",\"some-text\":\"HW12_some-text__o_p1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__xknt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__iQF3T\",\"priority\":\"Affairs_priority__26CXM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__31Yhe\",\"error\":\"Greeting_error__DlGTN\"};","import React from 'react'\r\nimport c from './Message.module.css';\r\n\r\ntype PropsType={\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props:PropsType) {\r\n    return (\r\n        <div>\r\n            <div className={c.message}>\r\n                <div className={c.message__wrapper+' '+c.content}>\r\n                    <div className={c.content__avatar}><img src={props.avatar} alt=\"\"/></div>\r\n                    <div className={c.content__body}>\r\n                        <div className={c.content__name}>{props.name}</div>\r\n                        <div className={c.content__message}>\r\n                            <div className={c.content__messagetext}>{props.message}</div>\r\n                            <div className={c.content__time}>{props.time}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={c.input}>\r\n                <input type=\"text\"/>\r\n                <button>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport c from './Affairs.module.css'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id:number)=>void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            <span>{props.affair.name}</span>\r\n            <span className={c.priority}>{props.affair.priority}</span>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (string:FilterType)=>void\r\n    deleteAffairCallback: (_id:number)=>void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high'|'low'|'middle'\r\nexport type AffairType = {\r\n    _id:number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\n\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n\r\n    if (filter === 'all') return affairs\r\n    if (filter === 'high'){\r\n        return affairs.filter((t:AffairType)=>t.priority==='high')\r\n    }\r\n    if (filter === 'low'){\r\n        return affairs.filter((t:AffairType)=>t.priority==='low')\r\n    }\r\n    if (filter === 'middle'){\r\n        return affairs.filter((t:AffairType)=>t.priority==='middle')\r\n    } else return affairs\r\n\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    let newArrayAffairs = affairs.filter((t:AffairType)=>t._id!==_id)\r\n    return newArrayAffairs;\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent,KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string|null\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=>void\r\n    addUser: ()=>void\r\n    error: string|null\r\n    totalUsers: number\r\n    onKeyPressHandler:(e:KeyboardEvent<HTMLInputElement>)=>void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers,onKeyPressHandler} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name ? name:''} onChange={setNameCallback} className={error ? inputClass:''} onKeyPress={onKeyPressHandler}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent,KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string|null)=>void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string|null>('')\r\n    const [error, setError] = useState<string|null>('')\r\n\r\n    const setNameCallback = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n        name ? alert(`Hello ${name} !`): setError('Field is requared')\r\n        addUserCallback(name)\r\n        setName('')\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>)=>{\r\n        setError(null)\r\n        if(e.charCode==13){addUser()}\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n\r\n    const addUserCallback = (name: string|null) => {\r\n        if(name){\r\n            let newUser = {_id:v1(), name:name}\r\n            setUsers([newUser, ...users])\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        let value = e.currentTarget.value\r\n        onChangeText && onChangeText(value)\r\n\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.defaultInput} ${error ? s.errorInput: ''} ` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(onChangeChecked)  {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport c from './SuperInputText.module.css'\r\n\r\nexport type Input ={\r\n    value: string\r\n    onChangeText: (value:string)=>void\r\n}\r\n\r\n\r\n\r\nfunction AlternativeSuperInputText(props:Input) {\r\n    const [error, setError] = useState<string|null>(null)\r\n\r\n    const onChangeValue = (e:ChangeEvent<HTMLInputElement>)=>{\r\n        console.log(e.currentTarget)\r\n        props.onChangeText(e.currentTarget.value.trim())\r\n        !e.currentTarget.value.trim() ? setError('Field is empty'):setError('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input onChange={onChangeValue} className={error ? c.errorInput:''} />\r\n            <span className={c.error}>{error}</span>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AlternativeSuperInputText\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\nimport AlternativeSuperInputText from \"./common/c1-SuperInputText/AlternativeSuperInputText\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeSuperInputText\r\n                value={text}\r\n                onChangeText={setText}/>\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState('editable-span-value', ''))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((el,i)=><option key={i} value={el}>{el}</option>) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChangeOption && onChangeOption(e.currentTarget.value);\r\n\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                onChange={onChangeCallback}\r\n                value={o}\r\n                checked={ o === value}\r\n                name={name}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {UserType} from \"../HW8\";\r\n\r\ntype UpType = {\r\n    type: 'sort'\r\n    payload: 'up'\r\n}\r\ntype DownType = {\r\n    type: 'sort'\r\n    payload: 'down'\r\n}\r\ntype CheckType = {\r\n    type: 'check'\r\n    payload: 18\r\n}\r\ntype ActionsType = UpType | DownType | CheckType;\r\n\r\nexport const homeWorkReducer = (state: UserType, action: ActionsType): UserType => {\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            return action.payload==='up' ?\r\n                [...state.sort((a,b)=>a.age <= b.age?-1:1)]:\r\n                [...state.sort((a,b)=>a.age > b.age?-1:1)]\r\n        }\r\n        case 'check': {\r\n            return [...state.filter(el=>el.age>=action.payload)]\r\n        }\r\n        default: return state\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nexport type PeopleType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\nexport type UserType = Array<PeopleType>\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<UserType>(initialPeople)\r\n\r\n    const finalPeople = people.map((p: PeopleType) => (\r\n        <div key={p._id} style={{display:'flex', width:'200px', justifyContent:'space-between', paddingLeft:'20px'}}>\r\n            <div>{p.name}</div>\r\n            <div>{p.age}</div>\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const sortCheck = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload:18}))\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {finalPeople}\r\n            <div style={{display:'flex'}}>\r\n                <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n                <div style={{paddingLeft:'10px', paddingRight:'10px'}}><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n                <div><SuperButton onClick={sortCheck}>check 18</SuperButton></div>\r\n            </div>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nfunction AlternativeClock() {\r\n    const [date, setDate] = useState<Date>()\r\n    const [intId, setIntId] = useState<number>()\r\n    const [show, setShow] = useState(false)\r\n\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000)\r\n        setIntId(id)\r\n    }\r\n    const stop = () => {\r\n        clearInterval(intId)\r\n    }\r\n\r\n    const stringTime = date?.toLocaleTimeString('en-US') || <br/>\r\n    const stringDate = date?.toLocaleDateString('ko-KR') || <br/>\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n                {stringTime}\r\n            </div>\r\n            {show ? <div>{stringDate}</div> : <br/>}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeClock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\nimport AlternativeClock from \"./AlternativeClock\";\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            {/*<Clock/>*/}\r\n            <AlternativeClock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","const SET_LOADING = 'SET_LOADING'\r\nconst initState = {\r\n    isLoading: false\r\n}\r\ntype InitialStateType = typeof initState\r\n\r\nexport const loadingReducer = (state:InitialStateType = initState, action: loadingActionType): InitialStateType => { // fix any\r\n    switch (action.type) {\r\n        case SET_LOADING: {\r\n            return {...state, isLoading:action.isLoading}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const loadingAC = (isLoading: boolean): loadingActionType => {\r\n    return {type: SET_LOADING, isLoading}\r\n}\r\ntype loadingActionType = {\r\n    type: typeof SET_LOADING\r\n    isLoading: boolean\r\n}","import React from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {loadingAC} from \"./bll/loadingReducer\";\r\nimport store, {AppStoreType} from \"./bll/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nfunction HW10() {\r\n    // useSelector, useDispatch\r\n    const loading = useSelector<AppStoreType, boolean>(state=>state.loading.isLoading)\r\n    const dispatch = useDispatch()\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true))\r\n\r\n\r\n        setTimeout(()=>{\r\n            dispatch(loadingAC(false))\r\n        },2000)\r\n        console.log('loading...')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div>крутилка...</div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\nimport {makeStyles, Slider, Typography} from \"@material-ui/core\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n    value?: number\n};\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n        paddingLeft:200\n    },\n});\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n        value,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const classes = useStyles();\n\n    const handleChange = (event: any, newValue: number | number[]) =>{\n        onChangeRange && onChangeRange(newValue as number)\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography id=\"range-slider\" gutterBottom>\n                Super Range\n            </Typography>\n            <Slider\n                value={value}\n                onChange={handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n            />\n        </div>\n    )\n\n}\n\nexport default SuperRange\n","import React from 'react'\nimport {makeStyles, Slider, Typography} from \"@material-ui/core\";\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: [number, number]) => void\n    value?: [number, number]\n    // min, max, step, disable, ...\n}\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n        paddingLeft:200\n    },\n});\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\n    {\n        onChangeRange, value,\n        // min, max, step, disable, ...\n    }\n) => {\n    const classes = useStyles();\n\n    const handleChange = (event: any, newValue: number | number[]) =>{\n    onChangeRange && onChangeRange(newValue as [number,number])\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography id=\"range-slider\" gutterBottom>\n                Super Double Range\n            </Typography>\n            <Slider\n                value={value}\n                onChange={handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n            />\n        </div>\n    )\n}\n\nexport default SuperDoubleRange\n","import React, {useState} from 'react'\nimport SuperRange from './common/c7-SuperRange/SuperRange'\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\n\nexport function HW11() {\n    const [value1, setValue1] = useState(15)\n    const [value2, setValue2] = useState(78)\n\n    const changeValue = (value:[number,number]) =>{\n        setValue1(value[0])\n        setValue2(value[1])\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 11\n\n            {/*should work (должно работать)*/}\n            <div>\n                <span>{value1}</span>\n                <SuperRange\n                    onChangeRange = {setValue1}\n                    value={value1}\n                />\n            </div>\n\n            <div>\n                <span>{value1}</span>\n                <SuperDoubleRange\n                    onChangeRange={changeValue}\n                    value = {[value1,value2]}\n                />\n                <span>{value2}</span>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperRange/>*/}\n            {/*<AlternativeSuperDoubleRange/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW11\n","import React from 'react'\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction Junior(){\r\n    return(\r\n        <div>\r\n            <HW6/>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from \"react\";\nimport s from \"./HW12.module.css\";\n\nconst themes = ['dark', 'red', 'some'];\n\nfunction HW12() {\n    const theme = 'some'; // useSelector\n\n    // useDispatch, onChangeCallback\n\n    return (\n        <div className={s[theme]}>\n            <hr/>\n            <span className={s[theme + '-text']}>\n                homeworks 12\n            </span>\n\n            {/*should work (должно работать)*/}\n            {/*SuperSelect or SuperRadio*/}\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW12;\n","import React from 'react'\r\nimport HW12 from \"../../h12/HW12\";\r\n\r\nfunction JuniorPlus(){\r\n    return(\r\n        <div>\r\n            <HW12/>\r\n        </div>\r\n    )\r\n}\r\nexport default JuniorPlus","import React from 'react'\r\nimport { Switch, Redirect, Route } from 'react-router-dom'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/Junior++\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {PATH} from \"./Routes\";\r\nimport c from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className={c.menu}>\r\n\r\n                <div className={c.menu__item}><NavLink to={PATH.PRE_JUNIOR}>PreJunior</NavLink></div>\r\n                <div className={c.menu__item}><NavLink to={PATH.JUNIOR}>Junior</NavLink></div>\r\n                <div className={c.menu__item}><NavLink to={PATH.JUNIOR_PLUS}>JuniorPlus</NavLink></div>\r\n                <div className={c.menu_btn}>Menu</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n\r\n            {/*<HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import {loadingReducer} from './loadingReducer'\r\nimport { combineReducers,createStore } from 'redux'\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\ntype ReducerType = typeof reducers\r\nexport type AppStoreType = ReturnType<ReducerType>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from \"react-redux\";\nimport store from \"./p2-homeworks/h10/bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}